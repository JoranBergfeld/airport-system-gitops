kind: Deployment
apiVersion: apps/v1
metadata:
  name: flight-scheduler
  namespace: airport-system
  labels:
    app: flight-scheduler
    application-system: airport-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flight-scheduler
  template:
    metadata:
      labels:
        app: flight-scheduler
    spec:
      containers:
        - name: flight-scheduler
          image: ghcr.io/joranbergfeld/airport-system-flight-scheduler/flight-scheduler:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: spring-boot-app-config-map
            - configMapRef:
                name: flight-scheduler-config-map    
            - secretRef:
                name: spring-boot-database-credentials-secret
          resources: { }
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness          
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          # Application is configured for graceful shutdowns, so leave the app 10 seconds to handle current requests.
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          resources: { }
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
